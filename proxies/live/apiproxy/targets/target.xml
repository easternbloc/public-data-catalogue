<TargetEndpoint name="public-data-catalogue-target">
  <FaultRules>
    <FaultRule name="access_token_expired">
      <Step>
        <Name>ExtractVariables.OAuthErrorFaultString</Name>
      </Step>
      <Step>
        <Name>AssignMessage.OAuthPolicyErrorResponse</Name>
      </Step>
      <Condition>oauthV2.OauthV2.VerifyAccessToken.failed</Condition>
    </FaultRule>
    <FaultRule name="invalid_key_rule">
      <Step>
        <Name>RaiseFault.InvalidOrMissingApiKey</Name>
      </Step>
 <!--    <Condition>(oauthV2.VerifyApiKey.FromHeader.failed)</Condition> -->
     <!-- FAIL <Condition>oauth.v2.InvalidApiKeyForGivenResource</Condition> -->
    <Condition>(fault.name Equals "FailedToResolveAPIKey") or (fault.name Equals "InvalidApiKey")</Condition>
  <!--   <Condition>(fault.name Equals "FailedToResolveAPIKey") or (fault.name Equals "InvalidApiKey") or (fault.name Equals "RaiseFault.401Unauthorized")</Condition> -->
    </FaultRule>
  </FaultRules>
  <PreFlow>
    <Request>
      <Step>
        <Name>VerifyApiKey.FromHeader</Name>
      </Step>
      <Step>
        <Name>Quota</Name>
      </Step>
      <Step>
        <Name>SpikeArrest</Name>
      </Step>
    </Request>
  </PreFlow>
    <HTTPTargetConnection>
      <SSLInfo>
        <Enabled>true</Enabled>
      </SSLInfo>
      <LoadBalancer>
        <Server name="{{ HRDC_TARGET_SERVER }}" />
      </LoadBalancer>
    </HTTPTargetConnection>
</TargetEndpoint>